clear all; clc;
format long e;  % 科學記號顯示（15位有效數字）

%% B_2 矩陣 (參考矩陣)
fprintf('=== Reference: paper_2 B ===\n');
B_2 = [0.2816, -0.0052, -0.0406, -0.0305, -0.0316, -0.0505;
      -0.0111,  0.2659, -0.0423, -0.0666, -0.0756, -0.0346;
      -0.0470, -0.0332,  0.2795, -0.0064, -0.0237, -0.0530;
      -0.0308, -0.0646, -0.0129,  0.2348, -0.0833, -0.0193;
      -0.0411, -0.0661, -0.0217, -0.0760,  0.2537, -0.0118;
      -0.0477, -0.0208, -0.0402, -0.0250, -0.0056,  0.2302];
disp(B_2);

%% 定義所有 inv_B 矩陣
fprintf('\n=== 定義所有 inv_B 矩陣版本 ===\n\n');

% 1. 活躍使用版本 (開環校準模型)
inv_B_active = [
    1.254431611705956e+03, 3.659220943459926e+02, 3.627155917884968e+02, 5.093482978358023e+02, 5.107001779284304e+02, 4.780582926900250e+02;
    3.546971171665686e+02, 1.162405056456143e+03, 3.879439456363920e+02, 6.699392357083276e+02, 6.924786011832921e+02, 4.485820022028297e+02;
    4.275001765633072e+02, 4.539421687049577e+02, 1.258888469891571e+03, 4.392720672764521e+02, 4.879780723937001e+02, 5.207798602912907e+02;
    4.425225059058810e+02, 6.546172791671690e+02, 3.537782454546361e+02, 1.460679099061605e+03, 8.004859896304748e+02, 4.487782507759195e+02;
    4.141758700238313e+02, 5.725106763685067e+02, 3.374250003002655e+02, 6.874793677108798e+02, 1.274435404241492e+03, 3.747160216413520e+02;
    4.122201604485579e+02, 4.009218769846693e+02, 3.684630812134598e+02, 4.744034014903570e+02, 4.073700335734076e+02, 1.371560285470157e+03
];

% 2. 基礎版本 (使用 tuneB, lines 3024-3029)
inv_B_tuneB_v1 = [
    212.0585, -29.7086, 30.4980, -32.8404, -10.3890, 8.1059;
    8.3094, 293.2598, -44.7326, 15.1792, -18.7528, 8.0361;
    24.7442, -59.5098, 324.3056, 42.4972, 0.6176, 1.7551;
    -44.2776, 31.7777, 48.8212, 179.7258, -4.2249, 28.0197;
    -5.3429, -31.5121, -14.5252, 1.8757, 298.0193, -10.3859;
    -32.3297, 6.3196, -29.8214, 11.0284, -81.1150, 318.0441
];

% 3. 固定數值版本 (lines 3031-3036)
inv_B_fixed = [
    706.8617, -99.0286, 101.6601, -109.4679, -34.6299, 27.0198;
    27.6981, 997.5328, -149.1087, 50.5974, -62.5095, 26.7869;
    82.4806, -198.3661, 1081.0, 141.6575, 2.0587, 5.8505;
    -147.5919, 105.9258, 162.7372, 599.0859, -14.0828, 93.3989;
    -17.8095, -105.0404, -48.4175, 6.2523, 993.3976, -34.6195;
    -107.7657, 21.0652, -99.4045, 36.7614, -270.3834, 1060.1
];

% 4. 混合正負版本 (使用 tuneB, lines 3112-3117)
inv_B_mixed = [
    1201.80359616, 21.19015278, 135.62449653, 83.38580371, -254.95594487, -147.73544906;
    252.11331900, 1329.99984790, -17.21534193, 204.78496773, -194.22452172, -137.35890550;
    178.41523376, -6.07311159, 1033.90364347, 129.91171774, -38.57119948, -17.04883455;
    114.62070075, 148.47260733, 140.69742322, 548.86911016, 45.34460741, 168.57624773;
    -144.28846864, -150.16430049, -64.30160646, 238.41702369, 1004.33654748, 16.15791286;
    -211.14151703, -15.91834287, -181.45887975, 138.59528895, -326.35121077, 1252.24485062
];

% 5. 小數值版本 (lines 3339-3344)
inv_B_small = [
    55.6160, 6.6002, 7.7939, 14.6131, 15.6702, 7.2708;
    4.5947, 36.2531, 10.5673, 7.0082, 6.5585, 11.0208;
    7.9762, 14.8588, 53.0316, 6.5523, 13.8454, 8.1787;
    12.2423, 8.3264, 5.4015, 43.8752, 8.2089, 11.8237;
    11.1713, 6.5169, 9.5774, 6.8868, 35.9266, 4.3654;
    7.3611, 15.4869, 8.2323, 14.2271, 6.4506, 53.6286
];

% 6. KF (Kalman Filter) 版本 (lines 3413-3418)
inv_B_KF = [
    1.309918170894343e+03, 4.584142346204578e+02, 4.331446831473254e+02, 5.699443964842505e+02, 5.793125707744808e+02, 5.017003207593597e+02;
    3.755896894938012e+02, 1.393096876263783e+03, 5.125887111084751e+02, 7.685979004388469e+02, 7.720185795512349e+02, 5.634091378410271e+02;
    4.315392609441408e+02, 5.188748550828485e+02, 1.455485771280925e+03, 4.673267347254888e+02, 5.226981631246839e+02, 5.275548918808353e+02;
    4.779699206387115e+02, 8.443396769114432e+02, 4.555154907276406e+02, 1.670108874923031e+03, 8.882733383508953e+02, 5.726402225640880e+02;
    5.113138453668143e+02, 8.098550809176789e+02, 5.024641704390988e+02, 8.673869110816750e+02, 1.617199543245617e+03, 5.008294406811985e+02;
    3.743309468277162e+02, 5.362041525542242e+02, 4.213148826950351e+02, 5.406406966853855e+02, 4.470495594040832e+02, 1.579073860618727e+03
];

% 7. 閉環校準模型 (lines 3459-3464)
inv_B_closed = [
    2.252794051977745e+03, 1.175831808991321e+03, 1.069193461519039e+03, 1.453112990992655e+03, 1.442707111410060e+03, 1.334189758277461e+03;
    1.087157599180847e+03, 2.166852357275609e+03, 1.057274549336901e+03, 1.673212903259123e+03, 1.711449874743882e+03, 1.193568598363952e+03;
    1.231829710244891e+03, 1.291003288364076e+03, 2.171467708032357e+03, 1.391232309225170e+03, 1.435840631462702e+03, 1.389433961914742e+03;
    1.215654315710113e+03, 1.564345902055325e+03, 1.028162109707909e+03, 2.536749011451320e+03, 1.838746928311204e+03, 1.218817798230567e+03;
    1.149857865337798e+03, 1.452388143179132e+03, 9.803165669805730e+02, 1.683293418135122e+03, 2.362948181416224e+03, 1.102946063044275e+03;
    1.271515197516766e+03, 1.231339434936472e+03, 1.125126027083836e+03, 1.452380595544379e+03, 1.384328263556148e+03, 2.406692435855719e+03
];

% 8. 靜態模型 (lines 3482-3487)
inv_B_static = [
    5.052752234346206, 1.473905522269914, 1.460989981230742, 2.051615031010199, 2.057060298089609, 1.925581342176398;
    1.428692193783487, 4.682076481026085, 1.562607813629332, 2.698462744810763, 2.789249542753055, 1.806853153864188;
    1.721937212165835, 1.828443484510641, 5.070704109877233, 1.769353465509795, 1.965537437506141, 2.097660468800533;
    1.782445977603872, 2.636747104495696, 1.424991050530863, 5.883500951805047, 3.224294839929704, 1.807643627738502;
    1.668267949521143, 2.306028142318613, 1.359121460493836, 2.769113022067486, 5.133325943176671, 1.509326772321066;
    1.660390504601881, 1.614881904145931, 1.484140418259644, 1.910859726822413, 1.640854573606049, 5.524537354033384
];

% 9. 負數版本 (lines 3539-3544)
inv_B_negative = [
    -264.333661900978, -45.5199417583633, -74.7705524237604, -44.282054524846, -54.1537924054635, -90.6997381278527;
    -73.9894571588142, -253.553945774045, -61.857978967074, -124.263795876892, -125.882414226338, -78.4257766014806;
    -125.326096000106, -75.4311484341563, -464.618652787413, -53.9500438384259, -87.8765551556584, -158.128162221511;
    -160.484810229992, -196.011410367938, -129.445834255013, -537.240439520471, -247.091371892898, -151.822928068073;
    -71.6222135348007, -89.1867261589353, -50.9102452238652, -115.283007766937, -236.008025101569, -69.1150621205851;
    -103.651037300966, -47.1462476668506, -99.0676708489965, -45.9266742495227, -76.6864903937948, -428.31343561615
];

%% 分析每個 inv_B 與 B_2 的關係
matrix_names = {'活躍版本(開環)', 'tuneB_v1', '固定數值', '混合正負', '小數值', 'KF版本', '閉環校準', '靜態模型', '負數版本'};
inv_B_list = {inv_B_active, inv_B_tuneB_v1, inv_B_fixed, inv_B_mixed, inv_B_small, inv_B_KF, inv_B_closed, inv_B_static, inv_B_negative};

fprintf('\n========================================\n');
fprintf('     所有 inv_B 矩陣與 B_2 的關係分析\n');
fprintf('========================================\n\n');

% 儲存結果
results = [];

for i = 1:length(inv_B_list)
    fprintf('【%d. %s】\n', i, matrix_names{i});
    
    % 計算 B = inv(inv_B)
    B_current = inv(inv_B_list{i});
    
    % 計算與 B_2 的元素比例
    ratio_matrix = B_current ./ B_2;
    
    % 計算統計資料
    ratio_mean = mean(ratio_matrix(:));
    ratio_std = std(ratio_matrix(:));
    
    % 最小二乘法找最佳倍數
    scale_factor = B_2(:) \ B_current(:);
    
    % 計算擬合誤差
    fitting_error = norm(B_current - scale_factor * B_2, 'fro');
    relative_error = fitting_error / norm(B_current, 'fro') * 100;
    
    % 儲存結果
    results(i).name = matrix_names{i};
    results(i).scale_factor = scale_factor;
    results(i).ratio_mean = ratio_mean;
    results(i).ratio_std = ratio_std;
    results(i).fitting_error = fitting_error;
    results(i).relative_error = relative_error;
    
    % 顯示結果
    fprintf('  最佳倍數關係: B ≈ %.6e * B_2\n', scale_factor);
    fprintf('  元素比例平均: %.6e\n', ratio_mean);
    fprintf('  元素比例標準差: %.6e (越接近0表示越接近純倍數關係)\n', ratio_std);
    fprintf('  擬合誤差: %.6e\n', fitting_error);
    fprintf('  相對誤差: %.2f%%\n\n', relative_error);
end

%% 總結報告
fprintf('\n========================================\n');
fprintf('              總 結 報 告\n');
fprintf('========================================\n\n');

% 排序：按相對誤差從小到大
[~, idx] = sort([results.relative_error]);

fprintf('【按擬合品質排序 (相對誤差由小到大)】\n\n');
for i = 1:length(idx)
    j = idx(i);
    fprintf('%2d. %-15s: 倍數=%.3e, 相對誤差=%.2f%%, 標準差=%.3e\n', ...
        i, results(j).name, results(j).scale_factor, ...
        results(j).relative_error, results(j).ratio_std);
end

%% 識別倍數關係群組
fprintf('\n【倍數關係群組分析】\n\n');

% 定義相似閾值
threshold = 0.05; % 5% 的差異

groups = {};
used = false(length(results), 1);

for i = 1:length(results)
    if ~used(i)
        group = [i];
        for j = i+1:length(results)
            if ~used(j)
                ratio_diff = abs(results(i).scale_factor - results(j).scale_factor) / abs(results(i).scale_factor);
                if ratio_diff < threshold
                    group = [group, j];
                    used(j) = true;
                end
            end
        end
        used(i) = true;
        groups{end+1} = group;
    end
end

for i = 1:length(groups)
    fprintf('群組 %d (倍數約 %.3e):\n', i, mean([results(groups{i}).scale_factor]));
    for j = groups{i}
        fprintf('  - %s (倍數=%.3e)\n', results(j).name, results(j).scale_factor);
    end
    fprintf('\n');
end

%% 特殊觀察
fprintf('【特殊觀察】\n\n');

% 找出標準差最小的（最接近純倍數關係）
[min_std, min_idx] = min([results.ratio_std]);
fprintf('1. 最接近純倍數關係: %s (標準差=%.3e)\n', ...
    results(min_idx).name, min_std);

% 找出相對誤差最小的
[min_err, min_err_idx] = min([results.relative_error]);
fprintf('2. 擬合誤差最小: %s (相對誤差=%.2f%%)\n', ...
    results(min_err_idx).name, min_err);

% 檢查是否有負倍數關係
neg_scale = [results.scale_factor] < 0;
if any(neg_scale)
    fprintf('3. 具有負倍數關係的矩陣:\n');
    neg_indices = find(neg_scale);
    for i = neg_indices
        fprintf('   - %s (倍數=%.3e)\n', results(i).name, results(i).scale_factor);
    end
else
    fprintf('3. 所有矩陣都是正倍數關係\n');
end

fprintf('\n分析完成！\n');